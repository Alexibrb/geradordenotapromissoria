
{
  "entities": {
    "Client": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Client",
      "type": "object",
      "description": "Represents a client associated with promissory notes.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the client."
        },
        "name": {
          "type": "string",
          "description": "Client's full name."
        },
        "address": {
          "type": "string",
          "description": "Client's address."
        },
        "cpf": {
          "type": "string",
          "description": "Client's CPF number."
        },
        "contactInformation": {
          "type": "string",
          "description": "Client's contact information (e.g., phone number, email)."
        }
      },
      "required": [
        "name",
        "address",
        "cpf"
      ]
    },
    "PromissoryNote": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PromissoryNote",
      "type": "object",
      "description": "Represents a promissory note.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the promissory note."
        },
        "noteNumber": {
          "type": "string",
          "description": "Unique identifier number for the promissory note, generated from timestamp."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client."
        },
        "productServiceReference": {
          "type": "string",
          "description": "Reference to the product or service associated with the note."
        },
        "value": {
          "type": "number",
          "description": "The total value of the promissory note."
        },
        "paymentDate": {
          "type": "string",
          "description": "The initial payment date for the promissory note.",
          "format": "date-time"
        },
        "numberOfInstallments": {
          "type": "number",
          "description": "The number of installments for the promissory note."
        },
        "paymentType": {
          "type": "string",
          "enum": ["a-vista", "a-prazo"],
          "description": "The payment type for the note."
        },
        "hasDownPayment": {
          "type": "boolean",
          "description": "Indicates if the installment plan includes a down payment."
        },
        "downPaymentValue": {
          "type": "number",
          "description": "The value of the down payment, if applicable."
        },
        "latePaymentClause": {
          "type": "string",
          "description": "A specific clause to be included in the note for late payments, only applicable for installment plans."
        }
      },
      "required": [
        "noteNumber",
        "clientId",
        "productServiceReference",
        "value",
        "paymentDate",
        "numberOfInstallments",
        "paymentType"
      ]
    },
    "Payment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Payment",
      "type": "object",
      "description": "Represents a payment made towards a promissory note.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the payment."
        },
        "promissoryNoteId": {
          "type": "string",
          "description": "Reference to PromissoryNote."
        },
        "paymentDate": {
          "type": "string",
          "description": "The date the payment was made.",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "The amount paid."
        },
        "receiptNumber": {
          "type": "string",
          "description": "Receipt number for the payment"
        },
        "installmentNumber": {
            "type": "number",
            "description": "The specific installment number this payment refers to (0 for down payment)."
        },
        "isDownPayment": {
            "type": "boolean",
            "description": "Indicates if this payment is for the down payment."
        }
      },
      "required": [
        "promissoryNoteId",
        "paymentDate",
        "amount",
        "installmentNumber"
      ]
    },
     "AppUser": {
      "title": "AppUser",
      "type": "object",
      "description": "Represents a user of the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user (matches auth UID)."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "User's email address."
        },
        "displayName": {
          "type": "string",
          "description": "The user's display name."
        },
        "plan": {
          "type": "string",
          "enum": ["free", "pro"],
          "description": "The user's subscription plan."
        },
        "role": {
          "type": "string",
          "enum": ["admin", "user"],
          "description": "The user's role."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the user account was created."
        }
      },
      "required": ["id", "email", "plan", "role", "createdAt"]
    },
    "UserSettings": {
      "title": "UserSettings",
      "type": "object",
      "description": "Stores user-specific settings for generating notes.",
      "properties": {
        "header": {
          "type": "string",
          "description": "Default header text for promissory notes."
        },
        "creditorName": {
          "type": "string",
          "description": "Default name of the creditor."
        },
        "creditorCpf": {
          "type": "string",
          "description": "Default CPF/CNPJ of the creditor."
        },
        "creditorAddress": {
          "type": "string",
          "description": "Default address of the creditor."
        }
      }
    },
    "AppSettings": {
      "title": "AppSettings",
      "type": "object",
      "description": "Stores global application settings.",
      "properties": {
        "upgradeWhatsappNumber": {
          "type": "string",
          "description": "The WhatsApp number used for the upgrade link."
        },
        "tutorialVideoUrl": {
          "type": "string",
          "description": "The URL for the tutorial video link."
        }
      }
    }
  },
  "auth": {
    "providers": [
      "password"
    ]
  },
  "firestore": {
    "structure": [
       {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "AppUser",
          "schema": { "$ref": "#/entities/AppUser" },
          "description": "Stores user profile information, including plan and role. Document ID must match the user's auth UID."
        }
      },
      {
        "path": "/users/{userId}/clients/{clientId}",
        "definition": {
          "entityName": "Client",
          "schema": {
            "$ref": "#/entities/Client"
          },
          "description": "Stores client information for a specific user. Path-based ownership: only the authenticated user can access their own clients."
        }
      },
      {
        "path": "/users/{userId}/clients/{clientId}/promissoryNotes/{promissoryNoteId}",
        "definition": {
          "entityName": "PromissoryNote",
          "schema": {
            "$ref": "#/entities/PromissoryNote"
          },
          "description": "Stores promissory notes for a specific client of a user. Path-based ownership ensures data privacy."
        }
      },
      {
        "path": "/users/{userId}/clients/{clientId}/promissoryNotes/{promissoryNoteId}/payments/{paymentId}",
        "definition": {
          "entityName": "Payment",
          "schema": {
            "$ref": "#/entities/Payment"
          },
          "description": "Stores payment information for a specific promissory note. Path-based ownership ensures data privacy."
        }
      },
      {
        "path": "/users/{userId}/settings/appSettings",
        "definition": {
          "entityName": "UserSettings",
          "schema": {
            "$ref": "#/entities/UserSettings"
          },
          "description": "Stores application settings for a specific user. A single document 'appSettings' holds all settings."
        }
      },
       {
        "path": "/app_settings/general",
        "definition": {
          "entityName": "AppSettings",
          "schema": { "$ref": "#/entities/AppSettings" },
          "description": "Stores global application settings, like the WhatsApp number for upgrades. This is a single document for all users."
        }
      }
    ],
    "reasoning": "The Firestore structure is designed for a multi-user application. Each user's data (clients, promissory notes, payments) is stored in subcollections under their unique user document in the `users` collection. This enforces data isolation and simplifies security rules, as access control is based on the `userId` in the path. User-specific settings are stored in a single document for easy retrieval. Global settings are stored in a separate top-level collection."
  }
}
    
    